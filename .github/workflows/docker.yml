name: build docker images
on:
  push:
    paths-ignore:
      - .gitignore
      - README.md
      - compose.yml
      - .env
      - img.png

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - file: internal/services/video-service/Dockerfile
            image: ${{ github.repository }}-video
          - file: internal/services/text-service/Dockerfile
            image: ${{ github.repository }}-text
          - file: internal/services/user-service/Dockerfile
            image: ${{ github.repository }}-user
          - file: internal/services/file-service/Dockerfile
            image: ${{ github.repository }}-file
          - file: internal/gateways/main-api-gateway/Dockerfile
            image: ${{ github.repository }}-main-gateway
          - file: internal/gateways/video-api-gateway/Dockerfile
            image: ${{ github.repository }}-video-gateway

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image }}

      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
