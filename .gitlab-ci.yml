variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_BUILDKIT: 1
  REGISTRY: $CI_REGISTRY
  IMAGE_BASE: $CI_REGISTRY_IMAGE

stages:
  - preparation
  - build

.preparation-template: &preparation-template
  image: golang:1.24-alpine
  stage: preparation
  variables:
    GOOS: linux
    GOARCH: amd64
    GOPATH: "/go"
  before_script:
    - apk update
    - apk add --no-cache make protobuf-dev git
  script:
    - go mod tidy
    - go fmt ./...
    - go mod download
    - go get google.golang.org/grpc/cmd/protoc-gen-go-grpc
    - go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway
    - go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2
    - go install google.golang.org/protobuf/cmd/protoc-gen-go
    - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
    - export PATH="$PATH:$(go env GOPATH)/bin"
    - make generate_api
  artifacts:
    paths:
      - .
    expire_in: 1 hour

pre-build:
  <<: *preparation-template
  # Always run regardless of changes
  rules:
    - if: $CI_PIPELINE_SOURCE  # Remove file-based conditions

.build-template: &build-template
  image: docker
  services:
    - docker:dind
  stage: build
  needs: ["pre-build"]  # Requires the preparation job
  before_script:
    - unset DOCKER_HOST
    - docker context use builder
    - docker buildx create builder --use
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - |
      docker buildx create --use
      TAGS="--tag $IMAGE_NAME:${CI_COMMIT_REF_SLUG} --tag $IMAGE_NAME:${CI_COMMIT_SHORT_SHA}"
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
        TAGS="$TAGS --tag $IMAGE_NAME:latest"
      fi
      docker buildx build \
        --file $FILE \
        $TAGS \
        --push \
        --cache-from type=registry,ref=$IMAGE_NAME:buildcache \
        --cache-to type=registry,ref=$IMAGE_NAME:buildcache,mode=max \
        .

build-docker-images:
  parallel:
    matrix:
      - FILE: internal/services/video-service/Dockerfile
        SUFFIX: video
      - FILE: internal/services/text-service/Dockerfile
        SUFFIX: text
      - FILE: internal/services/user-service/Dockerfile
        SUFFIX: user
      - FILE: internal/services/file-service/Dockerfile
        SUFFIX: file
      - FILE: internal/gateways/main-api-gateway/Dockerfile
        SUFFIX: main-gateway
      - FILE: internal/gateways/video-api-gateway/Dockerfile
        SUFFIX: video-gateway
  variables:
    IMAGE_NAME: "${IMAGE_BASE}/${SUFFIX}"
  <<: *build-template