services:
  redis:
    container_name: uxedu-redis_container
    image: redis
    volumes:
      - ./storage/redis:/data
    ports:
      - "6379:6379"
    networks:
      - main-api-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    container_name: uxedu-postgres_container
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - main-api-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  minio-default:
    container_name: uxedu-minio-default_container
    image: quay.io/minio/minio
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage/minio-default:/data
    networks:
      - main-api-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-video:
    container_name: uxedu-minio-video_container
    image: quay.io/minio/minio
    command: server --address ":9002" --console-address ":9003" /data
    ports:
      - "9002:9002"
      - "9003:9003"
    volumes:
      - ./storage/minio-video:/data
    networks:
      - video-api-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9002/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

#  user-service:
#    container_name: uxedu-user-service_container
#    build:
#      context: .
#      dockerfile: internal/services/user-service/Dockerfile
#    ports:
#      - "50051:50051"
#    depends_on:
#      redis:
#        condition: service_healthy
#      postgres:
#        condition: service_healthy
#    networks:
#      - main-api-network
#  file-service:
#    container_name: uxedu-file-service_container
#    build:
#      context: .
#      dockerfile: internal/services/file-service/Dockerfile
#    ports:
#      - "50052:50052"
#    depends_on:
#      minio-default:
#        condition: service_healthy
#    networks:
#      - main-api-network
#

networks:
  main-api-network:
    driver: bridge
  video-api-network:
    driver: bridge

volumes:
  postgres:
  redis:
  minio-default:
  minio-video:

